{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "903467d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import sklearn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9817febf",
   "metadata": {},
   "outputs": [],
   "source": [
    "data=pd.read_csv(r\"C:\\Users\\Tejasvi\\Downloads\\emails\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "812c5bfd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>filename</th>\n",
       "      <th>Message-ID</th>\n",
       "      <th>content</th>\n",
       "      <th>Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>arnold-j/_sent_mail/34.</td>\n",
       "      <td>&lt;15267340.1075857594923.JavaMail.evans@thyme&gt;</td>\n",
       "      <td>eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...</td>\n",
       "      <td>Abusive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>arnold-j/_sent_mail/517.</td>\n",
       "      <td>&lt;15539583.1075857652152.JavaMail.evans@thyme&gt;</td>\n",
       "      <td>fuck you</td>\n",
       "      <td>Abusive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>arnold-j/_sent_mail/743.</td>\n",
       "      <td>&lt;4339799.1075857657711.JavaMail.evans@thyme&gt;</td>\n",
       "      <td>Gentlemen:\\nThe following champagne is availab...</td>\n",
       "      <td>Abusive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>arnold-j/_sent_mail/766.</td>\n",
       "      <td>&lt;25574783.1075857658215.JavaMail.evans@thyme&gt;</td>\n",
       "      <td>sorry i've taken so long...just been trying to...</td>\n",
       "      <td>Abusive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>arnold-j/_sent_mail/797.</td>\n",
       "      <td>&lt;19506151.1075857658895.JavaMail.evans@thyme&gt;</td>\n",
       "      <td>asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...</td>\n",
       "      <td>Abusive</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0                  filename  \\\n",
       "0           0   arnold-j/_sent_mail/34.   \n",
       "1           1  arnold-j/_sent_mail/517.   \n",
       "2           2  arnold-j/_sent_mail/743.   \n",
       "3           3  arnold-j/_sent_mail/766.   \n",
       "4           4  arnold-j/_sent_mail/797.   \n",
       "\n",
       "                                      Message-ID  \\\n",
       "0  <15267340.1075857594923.JavaMail.evans@thyme>   \n",
       "1  <15539583.1075857652152.JavaMail.evans@thyme>   \n",
       "2   <4339799.1075857657711.JavaMail.evans@thyme>   \n",
       "3  <25574783.1075857658215.JavaMail.evans@thyme>   \n",
       "4  <19506151.1075857658895.JavaMail.evans@thyme>   \n",
       "\n",
       "                                             content    Class  \n",
       "0  eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...  Abusive  \n",
       "1                                           fuck you  Abusive  \n",
       "2  Gentlemen:\\nThe following champagne is availab...  Abusive  \n",
       "3  sorry i've taken so long...just been trying to...  Abusive  \n",
       "4  asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...  Abusive  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "578e0dfa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(48076, 5)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e54438bc",
   "metadata": {},
   "source": [
    "## Data Cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c1d677aa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 48076 entries, 0 to 48075\n",
      "Data columns (total 5 columns):\n",
      " #   Column      Non-Null Count  Dtype \n",
      "---  ------      --------------  ----- \n",
      " 0   Unnamed: 0  48076 non-null  int64 \n",
      " 1   filename    48076 non-null  object\n",
      " 2   Message-ID  48076 non-null  object\n",
      " 3   content     48076 non-null  object\n",
      " 4   Class       48076 non-null  object\n",
      "dtypes: int64(1), object(4)\n",
      "memory usage: 1.8+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "567a0e0b",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.drop(columns=['Unnamed: 0','filename','Message-ID'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c77c0c98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>content</th>\n",
       "      <th>Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>31315</th>\n",
       "      <td>most up to date one - with Molly &amp; Jermey on i...</td>\n",
       "      <td>Non Abusive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43055</th>\n",
       "      <td>not to worry- we won't be cutting your budget....</td>\n",
       "      <td>Non Abusive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7829</th>\n",
       "      <td>7:00 game  \\ncan you let me know tomorrow??</td>\n",
       "      <td>Non Abusive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18759</th>\n",
       "      <td>Hell of a way to die.\\n\\n\\n\\n----- Original Me...</td>\n",
       "      <td>Non Abusive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47519</th>\n",
       "      <td>Attached is the final agenda and list of atten...</td>\n",
       "      <td>Non Abusive</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 content        Class\n",
       "31315  most up to date one - with Molly & Jermey on i...  Non Abusive\n",
       "43055  not to worry- we won't be cutting your budget....  Non Abusive\n",
       "7829         7:00 game  \\ncan you let me know tomorrow??  Non Abusive\n",
       "18759  Hell of a way to die.\\n\\n\\n\\n----- Original Me...  Non Abusive\n",
       "47519  Attached is the final agenda and list of atten...  Non Abusive"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "c5913344",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "encoder=LabelEncoder()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "588724f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['Class']=encoder.fit_transform(data['Class'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "71a0c455",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>content</th>\n",
       "      <th>Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>fuck you</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Gentlemen:\\nThe following champagne is availab...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>sorry i've taken so long...just been trying to...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             content  Class\n",
       "0  eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...      0\n",
       "1                                           fuck you      0\n",
       "2  Gentlemen:\\nThe following champagne is availab...      0\n",
       "3  sorry i've taken so long...just been trying to...      0\n",
       "4  asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...      0"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "bffdb509",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "content    0\n",
       "Class      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a8657fe4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "23420"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "69298c8b",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.drop_duplicates(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "dd54fd1d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>content</th>\n",
       "      <th>Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>fuck you</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Gentlemen:\\nThe following champagne is availab...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>sorry i've taken so long...just been trying to...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             content  Class\n",
       "0  eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...      0\n",
       "1                                           fuck you      0\n",
       "2  Gentlemen:\\nThe following champagne is availab...      0\n",
       "3  sorry i've taken so long...just been trying to...      0\n",
       "4  asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...      0"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f3f00eec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 24656 entries, 0 to 47981\n",
      "Data columns (total 2 columns):\n",
      " #   Column   Non-Null Count  Dtype \n",
      "---  ------   --------------  ----- \n",
      " 0   content  24656 non-null  object\n",
      " 1   Class    24656 non-null  int32 \n",
      "dtypes: int32(1), object(1)\n",
      "memory usage: 481.6+ KB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "505edd28",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    23014\n",
       "0     1642\n",
       "Name: Class, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['Class'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ca8c649a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33ea51f5",
   "metadata": {},
   "source": [
    "### 0: abusive\n",
    "### 1: non-abusive"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "37a70a62",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(data['Class'].value_counts(),labels=['non-abusive','abusive'],autopct=\"%0.2f\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4400ec06",
   "metadata": {},
   "source": [
    "## Data is Imbalanced"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "f748b0ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "abusive=data[data['Class']==0]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "5c7ddde3",
   "metadata": {},
   "outputs": [],
   "source": [
    "non_abusive=data[data['Class']==1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "eef9c9fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((1642, 2), (23014, 2))"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "abusive.shape,non_abusive.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "24d92c1f",
   "metadata": {},
   "outputs": [],
   "source": [
    "count_1,count_0=data.Class.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "d6aba055",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1642 23014\n"
     ]
    }
   ],
   "source": [
    "print( count_0,count_1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8ab6a613",
   "metadata": {},
   "outputs": [],
   "source": [
    "non_abusive_under=non_abusive.sample(count_0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "a450e022",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "data_new=pd.concat([abusive,non_abusive_under],axis=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "3b4e33a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3284, 2)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_new.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "6e9c18f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "random under-sampling:\n",
      "0    1642\n",
      "1    1642\n",
      "Name: Class, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print('random under-sampling:')\n",
    "print(data_new.Class.value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "4b449887",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>content</th>\n",
       "      <th>Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>fuck you</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Gentlemen:\\nThe following champagne is availab...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>sorry i've taken so long...just been trying to...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39734</th>\n",
       "      <td>Hello Matt-\\n\\n\\nI am not verifying these tran...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37412</th>\n",
       "      <td>\\tGary, would one of the following dates and t...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15915</th>\n",
       "      <td>- Florida Ballot.exe</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13575</th>\n",
       "      <td>It looks like Waha is on their but Permian is ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6504</th>\n",
       "      <td>i think it is something we need to do.  please...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3284 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 content  Class\n",
       "0      eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...      0\n",
       "1                                               fuck you      0\n",
       "2      Gentlemen:\\nThe following champagne is availab...      0\n",
       "3      sorry i've taken so long...just been trying to...      0\n",
       "4      asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...      0\n",
       "...                                                  ...    ...\n",
       "39734  Hello Matt-\\n\\n\\nI am not verifying these tran...      1\n",
       "37412  \\tGary, would one of the following dates and t...      1\n",
       "15915                               - Florida Ballot.exe      1\n",
       "13575  It looks like Waha is on their but Permian is ...      1\n",
       "6504   i think it is something we need to do.  please...      1\n",
       "\n",
       "[3284 rows x 2 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_new"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ee599e9",
   "metadata": {},
   "source": [
    "## Data is balanced using under sampling technique"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "4779029a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import nltk\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "787d6362",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package punkt to\n",
      "[nltk_data]     C:\\Users\\Tejasvi\\AppData\\Roaming\\nltk_data...\n",
      "[nltk_data]   Package punkt is already up-to-date!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nltk.download('punkt')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "98b35b9f",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_new['num_character']=data_new['content'].apply(len)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "0f5493e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        [eat, shit, John, J, Lavorato, @, excelr, 11/1...\n",
       "1                                              [fuck, you]\n",
       "2        [Gentlemen, :, The, following, champagne, is, ...\n",
       "3        [sorry, i, 've, taken, so, long, ..., just, be...\n",
       "4        [asshole, John, J, Lavorato, @, excelr, 12/23/...\n",
       "                               ...                        \n",
       "39734    [Hello, Matt-, I, am, not, verifying, these, t...\n",
       "37412    [Gary, ,, would, one, of, the, following, date...\n",
       "15915                             [-, Florida, Ballot.exe]\n",
       "13575    [It, looks, like, Waha, is, on, their, but, Pe...\n",
       "6504     [i, think, it, is, something, we, need, to, do...\n",
       "Name: content, Length: 3284, dtype: object"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_new['content'].apply(lambda x:nltk.word_tokenize(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "12c91aa0",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_new['num_words']=data_new['content'].apply(lambda x:len(nltk.word_tokenize(x)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "55cf20f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_new['num_sent']=data_new['content'].apply(lambda x:len(nltk.sent_tokenize(x)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "f479c8da",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>content</th>\n",
       "      <th>Class</th>\n",
       "      <th>num_character</th>\n",
       "      <th>num_words</th>\n",
       "      <th>num_sent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...</td>\n",
       "      <td>0</td>\n",
       "      <td>220</td>\n",
       "      <td>44</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>fuck you</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Gentlemen:\\nThe following champagne is availab...</td>\n",
       "      <td>0</td>\n",
       "      <td>612</td>\n",
       "      <td>99</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>sorry i've taken so long...just been trying to...</td>\n",
       "      <td>0</td>\n",
       "      <td>505</td>\n",
       "      <td>163</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...</td>\n",
       "      <td>0</td>\n",
       "      <td>203</td>\n",
       "      <td>42</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             content  Class  num_character  \\\n",
       "0  eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...      0            220   \n",
       "1                                           fuck you      0              8   \n",
       "2  Gentlemen:\\nThe following champagne is availab...      0            612   \n",
       "3  sorry i've taken so long...just been trying to...      0            505   \n",
       "4  asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...      0            203   \n",
       "\n",
       "   num_words  num_sent  \n",
       "0         44         1  \n",
       "1          2         1  \n",
       "2         99         6  \n",
       "3        163         8  \n",
       "4         42         2  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_new.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "625e7fb8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>num_character</th>\n",
       "      <th>num_words</th>\n",
       "      <th>num_sent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3284.000000</td>\n",
       "      <td>3284.000000</td>\n",
       "      <td>3284.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1751.595920</td>\n",
       "      <td>345.508222</td>\n",
       "      <td>14.721072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3645.719956</td>\n",
       "      <td>676.990001</td>\n",
       "      <td>28.101273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>5.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>219.000000</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>674.000000</td>\n",
       "      <td>133.000000</td>\n",
       "      <td>6.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1872.500000</td>\n",
       "      <td>374.500000</td>\n",
       "      <td>15.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>90803.000000</td>\n",
       "      <td>9132.000000</td>\n",
       "      <td>339.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       num_character    num_words     num_sent\n",
       "count    3284.000000  3284.000000  3284.000000\n",
       "mean     1751.595920   345.508222    14.721072\n",
       "std      3645.719956   676.990001    28.101273\n",
       "min         5.000000     1.000000     1.000000\n",
       "25%       219.000000    44.000000     3.000000\n",
       "50%       674.000000   133.000000     6.000000\n",
       "75%      1872.500000   374.500000    15.000000\n",
       "max     90803.000000  9132.000000   339.000000"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_new[['num_character','num_words','num_sent']].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ce842b5",
   "metadata": {},
   "source": [
    "#### for abusive emails"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "bde7ed56",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>num_character</th>\n",
       "      <th>num_words</th>\n",
       "      <th>num_sent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1642.000000</td>\n",
       "      <td>1642.000000</td>\n",
       "      <td>1642.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1690.338002</td>\n",
       "      <td>342.697929</td>\n",
       "      <td>16.955542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2834.633786</td>\n",
       "      <td>590.602864</td>\n",
       "      <td>32.171859</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>5.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>183.000000</td>\n",
       "      <td>40.250000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>597.500000</td>\n",
       "      <td>123.000000</td>\n",
       "      <td>6.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2121.000000</td>\n",
       "      <td>434.750000</td>\n",
       "      <td>19.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>35528.000000</td>\n",
       "      <td>7112.000000</td>\n",
       "      <td>339.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       num_character    num_words     num_sent\n",
       "count    1642.000000  1642.000000  1642.000000\n",
       "mean     1690.338002   342.697929    16.955542\n",
       "std      2834.633786   590.602864    32.171859\n",
       "min         5.000000     1.000000     1.000000\n",
       "25%       183.000000    40.250000     3.000000\n",
       "50%       597.500000   123.000000     6.000000\n",
       "75%      2121.000000   434.750000    19.000000\n",
       "max     35528.000000  7112.000000   339.000000"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_new[data_new['Class']==0][['num_character','num_words','num_sent']].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d00444c",
   "metadata": {},
   "source": [
    "#### for non-abusive emails"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "b4032c59",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>num_character</th>\n",
       "      <th>num_words</th>\n",
       "      <th>num_sent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1642.000000</td>\n",
       "      <td>1642.000000</td>\n",
       "      <td>1642.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1812.853837</td>\n",
       "      <td>348.318514</td>\n",
       "      <td>12.486602</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4306.737647</td>\n",
       "      <td>753.712587</td>\n",
       "      <td>23.126262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>7.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>256.250000</td>\n",
       "      <td>49.250000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>733.500000</td>\n",
       "      <td>141.000000</td>\n",
       "      <td>6.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1736.250000</td>\n",
       "      <td>334.500000</td>\n",
       "      <td>12.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>90803.000000</td>\n",
       "      <td>9132.000000</td>\n",
       "      <td>328.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       num_character    num_words     num_sent\n",
       "count    1642.000000  1642.000000  1642.000000\n",
       "mean     1812.853837   348.318514    12.486602\n",
       "std      4306.737647   753.712587    23.126262\n",
       "min         7.000000     1.000000     1.000000\n",
       "25%       256.250000    49.250000     3.000000\n",
       "50%       733.500000   141.000000     6.000000\n",
       "75%      1736.250000   334.500000    12.000000\n",
       "max     90803.000000  9132.000000   328.000000"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_new[data_new['Class']==1][['num_character','num_words','num_sent']].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "84719ed7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "4a99e730",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='num_words', ylabel='Count'>"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,8))\n",
    "sns.histplot(data_new[data_new['Class']==1]['num_words'])\n",
    "sns.histplot(data_new[data_new['Class']==0]['num_words'],color='red')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "229a08b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='num_sent', ylabel='Count'>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,8))\n",
    "sns.histplot(data_new[data_new['Class']==1]['num_sent'])\n",
    "sns.histplot(data_new[data_new['Class']==0]['num_sent'],color='red')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "368df7b9",
   "metadata": {},
   "source": [
    "## Data Preprocessing"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4082417c",
   "metadata": {},
   "source": [
    "1. convert to Lower case\n",
    "2. Tokenization\n",
    "3. Removing special characters\n",
    "4. Removing stop words and punctuation\n",
    "5. Stemming"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "47665d0f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~'"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from nltk.corpus import stopwords\n",
    "import string\n",
    "string.punctuation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "ba0a1ada",
   "metadata": {},
   "outputs": [],
   "source": [
    "from nltk.stem.porter import PorterStemmer\n",
    "ps=PorterStemmer()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "d50faa65",
   "metadata": {},
   "outputs": [],
   "source": [
    "def transform_text(content):\n",
    "    content = content.lower()\n",
    "    content = nltk.word_tokenize(content)\n",
    "    \n",
    "    y = []\n",
    "    for i in content:\n",
    "        if i.isalnum():\n",
    "            y.append(i)\n",
    "    \n",
    "    content = y[:]\n",
    "    y.clear()\n",
    "    \n",
    "    for i in content:\n",
    "        if i not in stopwords.words('english') and i not in string.punctuation:\n",
    "            y.append(i)\n",
    "            \n",
    "    content = y[:]\n",
    "    y.clear()\n",
    "    \n",
    "    for i in content:\n",
    "        y.append(ps.stem(i))\n",
    "    \n",
    "            \n",
    "    return \" \".join(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "162ca4fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'love danc even learn soon home'"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "transform_text(\"I loved your dancing even i will be Learning it soon @HOME\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "d7f3b6fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_new['transformed_text']=data_new['content'].apply(transform_text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "c57f8d60",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>content</th>\n",
       "      <th>Class</th>\n",
       "      <th>num_character</th>\n",
       "      <th>num_words</th>\n",
       "      <th>num_sent</th>\n",
       "      <th>transformed_text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...</td>\n",
       "      <td>0</td>\n",
       "      <td>220</td>\n",
       "      <td>44</td>\n",
       "      <td>1</td>\n",
       "      <td>eat shit john j lavorato excelr pm john ect cc...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>fuck you</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>fuck</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Gentlemen:\\nThe following champagne is availab...</td>\n",
       "      <td>0</td>\n",
       "      <td>612</td>\n",
       "      <td>99</td>\n",
       "      <td>6</td>\n",
       "      <td>gentlemen follow champagn avail 70 approxim re...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>sorry i've taken so long...just been trying to...</td>\n",
       "      <td>0</td>\n",
       "      <td>505</td>\n",
       "      <td>163</td>\n",
       "      <td>8</td>\n",
       "      <td>sorri taken long tri fend chick life sooooo ha...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...</td>\n",
       "      <td>0</td>\n",
       "      <td>203</td>\n",
       "      <td>42</td>\n",
       "      <td>2</td>\n",
       "      <td>asshol john j lavorato excelr john ect cc subj...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             content  Class  num_character  \\\n",
       "0  eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...      0            220   \n",
       "1                                           fuck you      0              8   \n",
       "2  Gentlemen:\\nThe following champagne is availab...      0            612   \n",
       "3  sorry i've taken so long...just been trying to...      0            505   \n",
       "4  asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...      0            203   \n",
       "\n",
       "   num_words  num_sent                                   transformed_text  \n",
       "0         44         1  eat shit john j lavorato excelr pm john ect cc...  \n",
       "1          2         1                                               fuck  \n",
       "2         99         6  gentlemen follow champagn avail 70 approxim re...  \n",
       "3        163         8  sorri taken long tri fend chick life sooooo ha...  \n",
       "4         42         2  asshol john j lavorato excelr john ect cc subj...  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_new.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "b41addc1",
   "metadata": {},
   "outputs": [],
   "source": [
    "from wordcloud import WordCloud\n",
    "wc = WordCloud(width=500,height=500,min_font_size=10,background_color='white')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "e85bc2be",
   "metadata": {},
   "outputs": [],
   "source": [
    "n_abusive_wc = wc.generate(data_new[data_new['Class'] == 1]['transformed_text'].str.cat(sep=\" \"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "367c97c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0x155b8702df0>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,6))\n",
    "plt.imshow(n_abusive_wc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "bfde3c86",
   "metadata": {},
   "outputs": [],
   "source": [
    "abusive_wc = wc.generate(data_new[data_new['Class'] == 0]['transformed_text'].str.cat(sep=\" \"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "eea7d274",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0x155b86cd100>"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15,6))\n",
    "plt.imshow(abusive_wc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "2fcd5602",
   "metadata": {},
   "outputs": [],
   "source": [
    "abusive_words = []\n",
    "for msg in data_new[data_new['Class'] == 0]['transformed_text'].tolist():\n",
    "    for word in msg.split():\n",
    "        abusive_words.append(word)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "e7b83f51",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Tejasvi\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from collections import Counter\n",
    "sns.barplot(pd.DataFrame(Counter(abusive_words).most_common(30))[0],pd.DataFrame(Counter(abusive_words).most_common(30))[1])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "c8d883fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "non_abusive_words = []\n",
    "for msg in data_new[data_new['Class'] == 1]['transformed_text'].tolist():\n",
    "    for word in msg.split():\n",
    "        non_abusive_words.append(word)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "0031319d",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Tejasvi\\anaconda3\\lib\\site-packages\\seaborn\\_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from collections import Counter\n",
    "sns.barplot(pd.DataFrame(Counter(non_abusive_words).most_common(30))[0],pd.DataFrame(Counter(non_abusive_words).most_common(30))[1])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "71c20253",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>content</th>\n",
       "      <th>Class</th>\n",
       "      <th>num_character</th>\n",
       "      <th>num_words</th>\n",
       "      <th>num_sent</th>\n",
       "      <th>transformed_text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...</td>\n",
       "      <td>0</td>\n",
       "      <td>220</td>\n",
       "      <td>44</td>\n",
       "      <td>1</td>\n",
       "      <td>eat shit john j lavorato excelr pm john ect cc...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>fuck you</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>fuck</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Gentlemen:\\nThe following champagne is availab...</td>\n",
       "      <td>0</td>\n",
       "      <td>612</td>\n",
       "      <td>99</td>\n",
       "      <td>6</td>\n",
       "      <td>gentlemen follow champagn avail 70 approxim re...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>sorry i've taken so long...just been trying to...</td>\n",
       "      <td>0</td>\n",
       "      <td>505</td>\n",
       "      <td>163</td>\n",
       "      <td>8</td>\n",
       "      <td>sorri taken long tri fend chick life sooooo ha...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...</td>\n",
       "      <td>0</td>\n",
       "      <td>203</td>\n",
       "      <td>42</td>\n",
       "      <td>2</td>\n",
       "      <td>asshol john j lavorato excelr john ect cc subj...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             content  Class  num_character  \\\n",
       "0  eat shit\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n11/1...      0            220   \n",
       "1                                           fuck you      0              8   \n",
       "2  Gentlemen:\\nThe following champagne is availab...      0            612   \n",
       "3  sorry i've taken so long...just been trying to...      0            505   \n",
       "4  asshole\\n\\n\\n\\n\\nJohn J Lavorato@excelr\\n12/23...      0            203   \n",
       "\n",
       "   num_words  num_sent                                   transformed_text  \n",
       "0         44         1  eat shit john j lavorato excelr pm john ect cc...  \n",
       "1          2         1                                               fuck  \n",
       "2         99         6  gentlemen follow champagn avail 70 approxim re...  \n",
       "3        163         8  sorri taken long tri fend chick life sooooo ha...  \n",
       "4         42         2  asshol john j lavorato excelr john ect cc subj...  "
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_new.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b26479b9",
   "metadata": {},
   "source": [
    "## Model Building"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db358c3f",
   "metadata": {},
   "source": [
    "### text vectorization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "0d932d3e",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.feature_extraction.text import CountVectorizer,TfidfVectorizer\n",
    "tfidf = TfidfVectorizer(max_features=2000)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "ae6a6d8c",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = tfidf.fit_transform(data_new['transformed_text']).toarray()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "843e9f14",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3284, 2000)"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "48a5287f",
   "metadata": {},
   "outputs": [],
   "source": [
    "y=data_new['Class'].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "ea52c301",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, ..., 1, 1, 1])"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "5879e2ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "a2c52011",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "43e7956a",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.naive_bayes import GaussianNB,MultinomialNB,BernoulliNB\n",
    "from sklearn.metrics import accuracy_score,confusion_matrix,precision_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "d864b504",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.naive_bayes import MultinomialNB\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.ensemble import AdaBoostClassifier\n",
    "from sklearn.ensemble import BaggingClassifier\n",
    "from sklearn.ensemble import ExtraTreesClassifier\n",
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "from xgboost import XGBClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "c0a47180",
   "metadata": {},
   "outputs": [],
   "source": [
    "svc = SVC(kernel='sigmoid', gamma=1.0)\n",
    "knc = KNeighborsClassifier()\n",
    "mnb = MultinomialNB()\n",
    "dtc = DecisionTreeClassifier(max_depth=5)\n",
    "lrc = LogisticRegression(solver='liblinear', penalty='l1')\n",
    "rfc = RandomForestClassifier(n_estimators=50, random_state=2)\n",
    "abc = AdaBoostClassifier(n_estimators=50, random_state=2)\n",
    "bc = BaggingClassifier(n_estimators=50, random_state=2)\n",
    "etc = ExtraTreesClassifier(n_estimators=50, random_state=2)\n",
    "gbdt = GradientBoostingClassifier(n_estimators=50,random_state=2)\n",
    "xgb = XGBClassifier(n_estimators=50,random_state=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "973a0ade",
   "metadata": {},
   "outputs": [],
   "source": [
    "clfs = {\n",
    "    'SVC' : svc, \n",
    "    'NB': mnb, \n",
    "    'DT': dtc, \n",
    "    'LR': lrc, \n",
    "    'RF': rfc, \n",
    "    'AdaBoost': abc, \n",
    "    'BgC': bc, \n",
    "    'ETC': etc,\n",
    "    'GBDT':gbdt,\n",
    "    'xgb':xgb\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "d3290b72",
   "metadata": {},
   "outputs": [],
   "source": [
    "def train_classifier(clf,X_train,y_train,X_test,y_test):\n",
    "    clf.fit(X_train,y_train)\n",
    "    y_pred = clf.predict(X_test)\n",
    "    accuracy = accuracy_score(y_test,y_pred)\n",
    "    precision = precision_score(y_test,y_pred)\n",
    "    \n",
    "    return accuracy,precision"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "fe28fd8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.9168356997971603, 0.9119850187265918)"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_classifier(svc,X_train,y_train,X_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "9ad42178",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "For  SVC\n",
      "Accuracy -  0.9168356997971603\n",
      "Precision -  0.9119850187265918\n",
      "For  NB\n",
      "Accuracy -  0.8843813387423936\n",
      "Precision -  0.8722627737226277\n",
      "For  DT\n",
      "Accuracy -  0.7139959432048681\n",
      "Precision -  0.8571428571428571\n",
      "For  LR\n",
      "Accuracy -  0.896551724137931\n",
      "Precision -  0.8932584269662921\n",
      "For  RF\n",
      "Accuracy -  0.8864097363083164\n",
      "Precision -  0.8660714285714286\n",
      "For  AdaBoost\n",
      "Accuracy -  0.8651115618661258\n",
      "Precision -  0.8791423001949318\n",
      "For  BgC\n",
      "Accuracy -  0.859026369168357\n",
      "Precision -  0.8389380530973451\n",
      "For  ETC\n",
      "Accuracy -  0.8975659229208925\n",
      "Precision -  0.8779174147217235\n",
      "For  GBDT\n",
      "Accuracy -  0.8356997971602435\n",
      "Precision -  0.8781512605042017\n",
      "For  xgb\n",
      "Accuracy -  0.8874239350912779\n",
      "Precision -  0.8990291262135922\n"
     ]
    }
   ],
   "source": [
    "accuracy_scores = []\n",
    "precision_scores = []\n",
    "\n",
    "for name,clf in clfs.items():\n",
    "    \n",
    "    current_accuracy,current_precision = train_classifier(clf, X_train,y_train,X_test,y_test)\n",
    "    \n",
    "    print(\"For \",name)\n",
    "    print(\"Accuracy - \",current_accuracy)\n",
    "    print(\"Precision - \",current_precision)\n",
    "    \n",
    "    accuracy_scores.append(current_accuracy)\n",
    "    precision_scores.append(current_precision)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "934ff06b",
   "metadata": {},
   "outputs": [],
   "source": [
    "performance_df = pd.DataFrame({'Algorithm':clfs.keys(),'Accuracy':accuracy_scores,'Precision':precision_scores}).sort_values('Precision',ascending=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "a67a5d51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Algorithm</th>\n",
       "      <th>Accuracy</th>\n",
       "      <th>Precision</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>SVC</td>\n",
       "      <td>0.916836</td>\n",
       "      <td>0.911985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>xgb</td>\n",
       "      <td>0.887424</td>\n",
       "      <td>0.899029</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>LR</td>\n",
       "      <td>0.896552</td>\n",
       "      <td>0.893258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>AdaBoost</td>\n",
       "      <td>0.865112</td>\n",
       "      <td>0.879142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>GBDT</td>\n",
       "      <td>0.835700</td>\n",
       "      <td>0.878151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>ETC</td>\n",
       "      <td>0.897566</td>\n",
       "      <td>0.877917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NB</td>\n",
       "      <td>0.884381</td>\n",
       "      <td>0.872263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>RF</td>\n",
       "      <td>0.886410</td>\n",
       "      <td>0.866071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>DT</td>\n",
       "      <td>0.713996</td>\n",
       "      <td>0.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>BgC</td>\n",
       "      <td>0.859026</td>\n",
       "      <td>0.838938</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Algorithm  Accuracy  Precision\n",
       "0       SVC  0.916836   0.911985\n",
       "9       xgb  0.887424   0.899029\n",
       "3        LR  0.896552   0.893258\n",
       "5  AdaBoost  0.865112   0.879142\n",
       "8      GBDT  0.835700   0.878151\n",
       "7       ETC  0.897566   0.877917\n",
       "1        NB  0.884381   0.872263\n",
       "4        RF  0.886410   0.866071\n",
       "2        DT  0.713996   0.857143\n",
       "6       BgC  0.859026   0.838938"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "performance_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "64308270",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.896551724137931, 0.8932584269662921)"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_classifier(lrc,X_train,y_train,X_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "b735e3cc",
   "metadata": {},
   "outputs": [],
   "source": [
    "performance_df1 = pd.melt(performance_df, id_vars = \"Algorithm\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "7338cd48",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Algorithm</th>\n",
       "      <th>variable</th>\n",
       "      <th>value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>SVC</td>\n",
       "      <td>Accuracy</td>\n",
       "      <td>0.916836</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>xgb</td>\n",
       "      <td>Accuracy</td>\n",
       "      <td>0.887424</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>LR</td>\n",
       "      <td>Accuracy</td>\n",
       "      <td>0.896552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AdaBoost</td>\n",
       "      <td>Accuracy</td>\n",
       "      <td>0.865112</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>GBDT</td>\n",
       "      <td>Accuracy</td>\n",
       "      <td>0.835700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>ETC</td>\n",
       "      <td>Accuracy</td>\n",
       "      <td>0.897566</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>NB</td>\n",
       "      <td>Accuracy</td>\n",
       "      <td>0.884381</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>RF</td>\n",
       "      <td>Accuracy</td>\n",
       "      <td>0.886410</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>DT</td>\n",
       "      <td>Accuracy</td>\n",
       "      <td>0.713996</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>BgC</td>\n",
       "      <td>Accuracy</td>\n",
       "      <td>0.859026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>SVC</td>\n",
       "      <td>Precision</td>\n",
       "      <td>0.911985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>xgb</td>\n",
       "      <td>Precision</td>\n",
       "      <td>0.899029</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>LR</td>\n",
       "      <td>Precision</td>\n",
       "      <td>0.893258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>AdaBoost</td>\n",
       "      <td>Precision</td>\n",
       "      <td>0.879142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>GBDT</td>\n",
       "      <td>Precision</td>\n",
       "      <td>0.878151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>ETC</td>\n",
       "      <td>Precision</td>\n",
       "      <td>0.877917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>NB</td>\n",
       "      <td>Precision</td>\n",
       "      <td>0.872263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>RF</td>\n",
       "      <td>Precision</td>\n",
       "      <td>0.866071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>DT</td>\n",
       "      <td>Precision</td>\n",
       "      <td>0.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>BgC</td>\n",
       "      <td>Precision</td>\n",
       "      <td>0.838938</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Algorithm   variable     value\n",
       "0        SVC   Accuracy  0.916836\n",
       "1        xgb   Accuracy  0.887424\n",
       "2         LR   Accuracy  0.896552\n",
       "3   AdaBoost   Accuracy  0.865112\n",
       "4       GBDT   Accuracy  0.835700\n",
       "5        ETC   Accuracy  0.897566\n",
       "6         NB   Accuracy  0.884381\n",
       "7         RF   Accuracy  0.886410\n",
       "8         DT   Accuracy  0.713996\n",
       "9        BgC   Accuracy  0.859026\n",
       "10       SVC  Precision  0.911985\n",
       "11       xgb  Precision  0.899029\n",
       "12        LR  Precision  0.893258\n",
       "13  AdaBoost  Precision  0.879142\n",
       "14      GBDT  Precision  0.878151\n",
       "15       ETC  Precision  0.877917\n",
       "16        NB  Precision  0.872263\n",
       "17        RF  Precision  0.866071\n",
       "18        DT  Precision  0.857143\n",
       "19       BgC  Precision  0.838938"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "performance_df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "13f7ea50",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 441.75x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(x = 'Algorithm', y='value', \n",
    "               hue = 'variable',data=performance_df1, kind='bar',height=5)\n",
    "plt.ylim(0.5,1.0)\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "41321824",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "b248e68c",
   "metadata": {},
   "source": [
    "### model improve\n",
    "### 1. Change the max_features parameter of TfIdf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "c8c51563",
   "metadata": {},
   "outputs": [],
   "source": [
    "temp_df = pd.DataFrame({'Algorithm':clfs.keys(),'Accuracy_max_ft_3000':accuracy_scores,'Precision_max_ft_3000':precision_scores}).sort_values('Precision_max_ft_3000',ascending=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "80d967be",
   "metadata": {},
   "outputs": [],
   "source": [
    "temp_df = pd.DataFrame({'Algorithm':clfs.keys(),'Accuracy_scaling':accuracy_scores,'Precision_scaling':precision_scores}).sort_values('Precision_scaling',ascending=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "32589899",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_df = performance_df.merge(temp_df,on='Algorithm')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "0d487972",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_df_scaled = new_df.merge(temp_df,on='Algorithm')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "05939a5c",
   "metadata": {},
   "outputs": [],
   "source": [
    "temp_df = pd.DataFrame({'Algorithm':clfs.keys(),'Accuracy_num_chars':accuracy_scores,'Precision_num_chars':precision_scores}).sort_values('Precision_num_chars',ascending=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "cda033f3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Algorithm</th>\n",
       "      <th>Accuracy</th>\n",
       "      <th>Precision</th>\n",
       "      <th>Accuracy_scaling_x</th>\n",
       "      <th>Precision_scaling_x</th>\n",
       "      <th>Accuracy_scaling_y</th>\n",
       "      <th>Precision_scaling_y</th>\n",
       "      <th>Accuracy_num_chars</th>\n",
       "      <th>Precision_num_chars</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>SVC</td>\n",
       "      <td>0.916836</td>\n",
       "      <td>0.911985</td>\n",
       "      <td>0.916836</td>\n",
       "      <td>0.911985</td>\n",
       "      <td>0.916836</td>\n",
       "      <td>0.911985</td>\n",
       "      <td>0.916836</td>\n",
       "      <td>0.911985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>xgb</td>\n",
       "      <td>0.887424</td>\n",
       "      <td>0.899029</td>\n",
       "      <td>0.887424</td>\n",
       "      <td>0.899029</td>\n",
       "      <td>0.887424</td>\n",
       "      <td>0.899029</td>\n",
       "      <td>0.887424</td>\n",
       "      <td>0.899029</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>LR</td>\n",
       "      <td>0.896552</td>\n",
       "      <td>0.893258</td>\n",
       "      <td>0.896552</td>\n",
       "      <td>0.893258</td>\n",
       "      <td>0.896552</td>\n",
       "      <td>0.893258</td>\n",
       "      <td>0.896552</td>\n",
       "      <td>0.893258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AdaBoost</td>\n",
       "      <td>0.865112</td>\n",
       "      <td>0.879142</td>\n",
       "      <td>0.865112</td>\n",
       "      <td>0.879142</td>\n",
       "      <td>0.865112</td>\n",
       "      <td>0.879142</td>\n",
       "      <td>0.865112</td>\n",
       "      <td>0.879142</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>GBDT</td>\n",
       "      <td>0.835700</td>\n",
       "      <td>0.878151</td>\n",
       "      <td>0.835700</td>\n",
       "      <td>0.878151</td>\n",
       "      <td>0.835700</td>\n",
       "      <td>0.878151</td>\n",
       "      <td>0.835700</td>\n",
       "      <td>0.878151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>ETC</td>\n",
       "      <td>0.897566</td>\n",
       "      <td>0.877917</td>\n",
       "      <td>0.897566</td>\n",
       "      <td>0.877917</td>\n",
       "      <td>0.897566</td>\n",
       "      <td>0.877917</td>\n",
       "      <td>0.897566</td>\n",
       "      <td>0.877917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>NB</td>\n",
       "      <td>0.884381</td>\n",
       "      <td>0.872263</td>\n",
       "      <td>0.884381</td>\n",
       "      <td>0.872263</td>\n",
       "      <td>0.884381</td>\n",
       "      <td>0.872263</td>\n",
       "      <td>0.884381</td>\n",
       "      <td>0.872263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>RF</td>\n",
       "      <td>0.886410</td>\n",
       "      <td>0.866071</td>\n",
       "      <td>0.886410</td>\n",
       "      <td>0.866071</td>\n",
       "      <td>0.886410</td>\n",
       "      <td>0.866071</td>\n",
       "      <td>0.886410</td>\n",
       "      <td>0.866071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>DT</td>\n",
       "      <td>0.713996</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>0.713996</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>0.713996</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>0.713996</td>\n",
       "      <td>0.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>BgC</td>\n",
       "      <td>0.859026</td>\n",
       "      <td>0.838938</td>\n",
       "      <td>0.859026</td>\n",
       "      <td>0.838938</td>\n",
       "      <td>0.859026</td>\n",
       "      <td>0.838938</td>\n",
       "      <td>0.859026</td>\n",
       "      <td>0.838938</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Algorithm  Accuracy  Precision  Accuracy_scaling_x  Precision_scaling_x  \\\n",
       "0       SVC  0.916836   0.911985            0.916836             0.911985   \n",
       "1       xgb  0.887424   0.899029            0.887424             0.899029   \n",
       "2        LR  0.896552   0.893258            0.896552             0.893258   \n",
       "3  AdaBoost  0.865112   0.879142            0.865112             0.879142   \n",
       "4      GBDT  0.835700   0.878151            0.835700             0.878151   \n",
       "5       ETC  0.897566   0.877917            0.897566             0.877917   \n",
       "6        NB  0.884381   0.872263            0.884381             0.872263   \n",
       "7        RF  0.886410   0.866071            0.886410             0.866071   \n",
       "8        DT  0.713996   0.857143            0.713996             0.857143   \n",
       "9       BgC  0.859026   0.838938            0.859026             0.838938   \n",
       "\n",
       "   Accuracy_scaling_y  Precision_scaling_y  Accuracy_num_chars  \\\n",
       "0            0.916836             0.911985            0.916836   \n",
       "1            0.887424             0.899029            0.887424   \n",
       "2            0.896552             0.893258            0.896552   \n",
       "3            0.865112             0.879142            0.865112   \n",
       "4            0.835700             0.878151            0.835700   \n",
       "5            0.897566             0.877917            0.897566   \n",
       "6            0.884381             0.872263            0.884381   \n",
       "7            0.886410             0.866071            0.886410   \n",
       "8            0.713996             0.857143            0.713996   \n",
       "9            0.859026             0.838938            0.859026   \n",
       "\n",
       "   Precision_num_chars  \n",
       "0             0.911985  \n",
       "1             0.899029  \n",
       "2             0.893258  \n",
       "3             0.879142  \n",
       "4             0.878151  \n",
       "5             0.877917  \n",
       "6             0.872263  \n",
       "7             0.866071  \n",
       "8             0.857143  \n",
       "9             0.838938  "
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df_scaled.merge(temp_df,on='Algorithm')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "b9010a1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Voting Classifier\n",
    "svc = SVC(kernel='sigmoid', gamma=1.0,probability=True)\n",
    "lrc = LogisticRegression(solver='liblinear', penalty='l1')\n",
    "xgb = XGBClassifier(n_estimators=50,random_state=2)\n",
    "\n",
    "from sklearn.ensemble import VotingClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "0c1979ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "voting = VotingClassifier(estimators=[('svm', svc), ('lr', lrc), ('xgb', xgb)],voting='soft')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "552a7718",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>VotingClassifier(estimators=[(&#x27;svm&#x27;,\n",
       "                              SVC(gamma=1.0, kernel=&#x27;sigmoid&#x27;,\n",
       "                                  probability=True)),\n",
       "                             (&#x27;lr&#x27;,\n",
       "                              LogisticRegression(penalty=&#x27;l1&#x27;,\n",
       "                                                 solver=&#x27;liblinear&#x27;)),\n",
       "                             (&#x27;xgb&#x27;,\n",
       "                              XGBClassifier(base_score=None, booster=None,\n",
       "                                            callbacks=None,\n",
       "                                            colsample_bylevel=None,\n",
       "                                            colsample_bynode=None,\n",
       "                                            colsample_bytree=None,\n",
       "                                            early_stopping_rounds=None,\n",
       "                                            enable_categorical=False,\n",
       "                                            eval_metric=None, gamm...\n",
       "                                            gpu_id=None, grow_policy=None,\n",
       "                                            importance_type=None,\n",
       "                                            interaction_constraints=None,\n",
       "                                            learning_rate=None, max_bin=None,\n",
       "                                            max_cat_to_onehot=None,\n",
       "                                            max_delta_step=None, max_depth=None,\n",
       "                                            max_leaves=None,\n",
       "                                            min_child_weight=None, missing=nan,\n",
       "                                            monotone_constraints=None,\n",
       "                                            n_estimators=50, n_jobs=None,\n",
       "                                            num_parallel_tree=None,\n",
       "                                            predictor=None, random_state=2,\n",
       "                                            reg_alpha=None, reg_lambda=None, ...))],\n",
       "                 voting=&#x27;soft&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">VotingClassifier</label><div class=\"sk-toggleable__content\"><pre>VotingClassifier(estimators=[(&#x27;svm&#x27;,\n",
       "                              SVC(gamma=1.0, kernel=&#x27;sigmoid&#x27;,\n",
       "                                  probability=True)),\n",
       "                             (&#x27;lr&#x27;,\n",
       "                              LogisticRegression(penalty=&#x27;l1&#x27;,\n",
       "                                                 solver=&#x27;liblinear&#x27;)),\n",
       "                             (&#x27;xgb&#x27;,\n",
       "                              XGBClassifier(base_score=None, booster=None,\n",
       "                                            callbacks=None,\n",
       "                                            colsample_bylevel=None,\n",
       "                                            colsample_bynode=None,\n",
       "                                            colsample_bytree=None,\n",
       "                                            early_stopping_rounds=None,\n",
       "                                            enable_categorical=False,\n",
       "                                            eval_metric=None, gamm...\n",
       "                                            gpu_id=None, grow_policy=None,\n",
       "                                            importance_type=None,\n",
       "                                            interaction_constraints=None,\n",
       "                                            learning_rate=None, max_bin=None,\n",
       "                                            max_cat_to_onehot=None,\n",
       "                                            max_delta_step=None, max_depth=None,\n",
       "                                            max_leaves=None,\n",
       "                                            min_child_weight=None, missing=nan,\n",
       "                                            monotone_constraints=None,\n",
       "                                            n_estimators=50, n_jobs=None,\n",
       "                                            num_parallel_tree=None,\n",
       "                                            predictor=None, random_state=2,\n",
       "                                            reg_alpha=None, reg_lambda=None, ...))],\n",
       "                 voting=&#x27;soft&#x27;)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>svm</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(gamma=1.0, kernel=&#x27;sigmoid&#x27;, probability=True)</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>lr</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(penalty=&#x27;l1&#x27;, solver=&#x27;liblinear&#x27;)</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>xgb</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n",
       "              colsample_bylevel=None, colsample_bynode=None,\n",
       "              colsample_bytree=None, early_stopping_rounds=None,\n",
       "              enable_categorical=False, eval_metric=None, gamma=None,\n",
       "              gpu_id=None, grow_policy=None, importance_type=None,\n",
       "              interaction_constraints=None, learning_rate=None, max_bin=None,\n",
       "              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,\n",
       "              max_leaves=None, min_child_weight=None, missing=nan,\n",
       "              monotone_constraints=None, n_estimators=50, n_jobs=None,\n",
       "              num_parallel_tree=None, predictor=None, random_state=2,\n",
       "              reg_alpha=None, reg_lambda=None, ...)</pre></div></div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "VotingClassifier(estimators=[('svm',\n",
       "                              SVC(gamma=1.0, kernel='sigmoid',\n",
       "                                  probability=True)),\n",
       "                             ('lr',\n",
       "                              LogisticRegression(penalty='l1',\n",
       "                                                 solver='liblinear')),\n",
       "                             ('xgb',\n",
       "                              XGBClassifier(base_score=None, booster=None,\n",
       "                                            callbacks=None,\n",
       "                                            colsample_bylevel=None,\n",
       "                                            colsample_bynode=None,\n",
       "                                            colsample_bytree=None,\n",
       "                                            early_stopping_rounds=None,\n",
       "                                            enable_categorical=False,\n",
       "                                            eval_metric=None, gamm...\n",
       "                                            gpu_id=None, grow_policy=None,\n",
       "                                            importance_type=None,\n",
       "                                            interaction_constraints=None,\n",
       "                                            learning_rate=None, max_bin=None,\n",
       "                                            max_cat_to_onehot=None,\n",
       "                                            max_delta_step=None, max_depth=None,\n",
       "                                            max_leaves=None,\n",
       "                                            min_child_weight=None, missing=nan,\n",
       "                                            monotone_constraints=None,\n",
       "                                            n_estimators=50, n_jobs=None,\n",
       "                                            num_parallel_tree=None,\n",
       "                                            predictor=None, random_state=2,\n",
       "                                            reg_alpha=None, reg_lambda=None, ...))],\n",
       "                 voting='soft')"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "voting.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "f2fa8a7c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy 0.9168356997971603\n",
      "Precision 0.9104477611940298\n"
     ]
    }
   ],
   "source": [
    "y_pred = voting.predict(X_test)\n",
    "print(\"Accuracy\",accuracy_score(y_test,y_pred))\n",
    "print(\"Precision\",precision_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "f1a0bfa3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Applying stacking\n",
    "estimators=[('svm', svc), ('lr', lrc), ('xgb', xgb)]\n",
    "final_estimator=RandomForestClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "56833e96",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import StackingClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "0694aa8a",
   "metadata": {},
   "outputs": [],
   "source": [
    "clf = StackingClassifier(estimators=estimators, final_estimator=final_estimator)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "61eeb06b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy 0.9137931034482759\n",
      "Precision 0.9023941068139963\n"
     ]
    }
   ],
   "source": [
    "clf.fit(X_train,y_train)\n",
    "y_pred = clf.predict(X_test);\n",
    "print(\"Accuracy\",accuracy_score(y_test,y_pred))\n",
    "print(\"Precision\",precision_score(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d19313c2",
   "metadata": {},
   "source": [
    "### Since support vector classifier model has highest accuracy and precision we will use this model for further predictions."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54d33bd7",
   "metadata": {},
   "source": [
    "## SVM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "8857f09c",
   "metadata": {},
   "outputs": [],
   "source": [
    "svc = SVC(kernel='sigmoid', gamma=1.0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "7caaabe6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9168356997971603\n",
      "[[417  47]\n",
      " [ 35 487]]\n",
      "0.9119850187265918\n"
     ]
    }
   ],
   "source": [
    "svc.fit(X_train,y_train)\n",
    "y_pred1 = svc.predict(X_test)\n",
    "print(accuracy_score(y_test,y_pred1))\n",
    "print(confusion_matrix(y_test,y_pred1))\n",
    "print(precision_score(y_test,y_pred1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "daa4bb32",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[417  47]\n",
      " [ 35 487]]\n"
     ]
    }
   ],
   "source": [
    "print(confusion_matrix(y_test,y_pred1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "9649fe91",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import classification_report,confusion_matrix,roc_auc_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "cbf06fbe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.92      0.90      0.91       464\n",
      "           1       0.91      0.93      0.92       522\n",
      "\n",
      "    accuracy                           0.92       986\n",
      "   macro avg       0.92      0.92      0.92       986\n",
      "weighted avg       0.92      0.92      0.92       986\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test,y_pred1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "28efe873",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "pickle.dump(tfidf,open('vectorizer.pkl','wb'))\n",
    "pickle.dump(svc,open('model.pkl','wb'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "30275b80",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
